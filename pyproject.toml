[tool.poetry]
name = "ppg2rr"
version = "0.1.0"
description = ""
authors = ["Kenny Chou <kennethfchou@gmail.com>"]
readme = "readme.md"
packages = [
    {include = "ppg2rr"},
    {include = "probrr"}
]

[tool.poetry.dependencies]
python = ">=3.9,<3.12"
numpy = "^1.24.2"
scipy = "^1.10.1"
pandas = ">2.2.0"
pyarrow = "^11.0.0"
h5py = "^3.8.0"
scikit-learn = "^1.2.2"
pymatreader = "^1.1.0"

[tool.poetry.group.dev.dependencies]
emd = "^0.6.2"
ipykernel = "^6.22.0"
neurokit2 = "^0.2.4"
ruff = "^0.0.253"
black = "^23.1.0"
mypy = "^1.0.1"
pre-commit = "^3.1.1"
pytest = "^7.2.1"
jupyter = "^1.0.0"
matplotlib = "^3.8.0"
seaborn = "^0.12.2"
plotly = "^5.14.1"
jupytext = "^1.14.5"
openpyxl = "^3.1.2"
kaleido = "0.1.0"
ipympl = "^0.9.3"
gitpython = "^3.1.31"

[tool.mypy]
files = "."
strict = true
pretty = true
warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
no_implicit_optional = true
check_untyped_defs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.ruff]
fix = true
line-length = 88
select = [
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "D",  # pydocstyle / flake8-docstrings
    "E",  # pycodestyle
    "F",  # pyflakes / flake8
    "I",  # isort
    "N",  # pep8-naming
    "W",  # pycodestyle
]
ignore = [
    "D103", # missing docstr (unnecessary for pytest)
    "D100", # missing docstr (unnecessary for pytest)
    "N802", # allow upper case function names
    "N806", # allow upper case variable names
    "B905", # allow zip() without "strict" parameter
]

[tool.ruff.pydocstyle]
convention = "google"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"